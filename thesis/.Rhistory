select(TRD_DD,PROD_ID,EXPMM_NO,ISU_CD) %>%
pivot_wider(names_from = c("PROD_ID","EXPMM_NO"), values_from = "ISU_CD")
year_first_day <- target_isu_wide %>%
mutate(TRD_YY=substr(TRD_DD,1,4)) %>%
group_by(TRD_YY) %>%
slice(1) %>%
ungroup() %>%
select(TRD_DD)
data_min <- tibble()
data_close <- tibble()
for(i in 1500:1550){
# for(i in which(target_isu_wide$TRD_DD==20190102):NROW(target_isu_wide$TRD_DD)){
# transaction level data to second level data
tmp_second <- read_csv(gzfile(paste0("data/DRV_TRD/",target_isu_wide$TRD_DD[i],"_DRV_TRD.csv.gz")),
show_col_types = FALSE) %>%
tibble() %>%
filter(ISU_CD %in% c(target_isu_wide$KRDRVFUK2I_1[i],target_isu_wide$KRDRVFUKQI_1[i],target_isu_wide$KRDRVFUK2I_2[i],target_isu_wide$KRDRVFUKQI_2[i])) %>%
filter(BRD_ID=="G1", SESS_ID==40) %>% # Regulat trading hour & Continuous trading
mutate(T_min=TRD_TM %/% 100000,
T_sec=TRD_TM %/% 1000) %>%
arrange(TRD_DD,ISU_CD,TRD_NO) %>%
group_by(TRD_DD,ISU_CD,SESS_ID,T_min,T_sec) %>%
summarise(VWAP=weighted.mean(TRD_PRC,TRDVOL),
TRDVOL=sum(TRDVOL),
.groups = "drop")
# first day every year & 수능
if(target_isu_wide$TRD_DD[i] %in% year_first_day){
tmp_second <- tmp_second %>% mutate(day_grp=1)
}else if(max(tmp_second$T_min)>1600){
tmp_second <- tmp_second %>% mutate(day_grp=2,
T_min=T_min-100, T_sec=T_sec-10000)
}else{tmp_second <- tmp_second %>% mutate(day_grp=0)}
tmp_second <- tmp_second %>%
filter(T_min>=900, T_min<=1530) %>%
group_by(TRD_DD, ISU_CD) %>%
arrange(TRD_DD, ISU_CD, T_sec) %>%
mutate(Ret_sec=log(VWAP)-log(dplyr::lag(VWAP))) %>%
ungroup()
tmp_min <- tmp_second %>%
group_by(TRD_DD, ISU_CD, T_min) %>%
summarise(Ret_min=sum(Ret_sec, na.rm = TRUE),
TSRV_5s=0,
RDSkew=mean(Ret_sec^3, na.rm = TRUE) / (mean(Ret_sec^2, na.rm = TRUE)^(3/2)),
P_low=min(VWAP),
Volume=sum(TRDVOL),
RV=sum(Ret_sec^2, na.rm = TRUE),
TSRV_10s=0,
AvgRV_5s=0,
AvgRV_10s=0,
Skew=skewness(Ret_sec, na.rm = TRUE),
VWAP_min=weighted.mean(VWAP, TRDVOL),
Count=n(),
day_grp=dplyr::first(day_grp),
.groups = "drop")
# Commute Autocorrelation of return's each min-level group
tmp_min_auto <- tmp_second %>%
select(TRD_DD, ISU_CD, T_min, Ret_sec) %>%
group_by(TRD_DD, ISU_CD, T_min) %>%
mutate(Ret_sec_lag=dplyr::lag(Ret_sec)) %>%
summarise(Avg_Ret_lag=mean(Ret_sec_lag, na.rm = TRUE),
Avg_Ret=mean(Ret_sec, na.rm = TRUE),
Ret_cross=mean(Ret_sec * Ret_sec_lag, na.rm = TRUE),
SD_Ret_lag=sd(Ret_sec_lag, na.rm = TRUE),
SD_Ret=sd(Ret_sec, na.rm = TRUE),
.groups = "drop") %>%
mutate(AutoCov = (Ret_cross - Avg_Ret_lag*Avg_Ret) / (SD_Ret_lag * SD_Ret)) %>%
select(TRD_DD, ISU_CD, T_min, AutoCov)
tmp_min <- tmp_min %>%
left_join(., tmp_min_auto, by=c("TRD_DD", "ISU_CD", "T_min"))
# calculate 5-second TSRV(Two Scale Realized Volatility)
for(k in 0:4){
ttmp_subsample <- tmp_second %>%
mutate(SubGrp=(T_sec%%100-k) %/% 5) %>%
filter(SubGrp>=0, SubGrp<11) %>%
group_by(TRD_DD, ISU_CD, T_min, SubGrp) %>%
summarise(Ret_sub=sum(Ret_sec, na.rm = TRUE), .groups = "drop") %>%
group_by(TRD_DD, ISU_CD, T_min) %>%
summarise(RV_sub=sum(Ret_sub^2, na.rm = TRUE), .groups = "drop")
tmp_min <- tmp_min %>%
left_join(ttmp_subsample, by=c("TRD_DD","ISU_CD","T_min")) %>%
mutate(AvgRV_5s=AvgRV_5s+RV_sub/5) %>% # 5-times subsampling
select(-RV_sub)
rm(ttmp_subsample)
}
tmp_min <- tmp_min %>%
mutate(TSRV_5s=(AvgRV_5s-(11/60)*RV)/(1-11/60)) # remove noise & scaling to minute level
# calculate 10-second TSRV(Two Scale Realized Volatility)
for(k in 0:9){
ttmp_subsample <- tmp_second %>%
mutate(SubGrp=(T_sec%%100-k) %/% 10) %>%
filter(SubGrp>=0, SubGrp<5) %>%
group_by(TRD_DD, ISU_CD, T_min, SubGrp) %>%
summarise(Ret_sub=sum(Ret_sec, na.rm = TRUE), .groups = "drop") %>%
group_by(TRD_DD, ISU_CD, T_min) %>%
summarise(RV_sub=sum(Ret_sub^2, na.rm = TRUE), .groups = "drop")
tmp_min <- tmp_min %>%
left_join(ttmp_subsample, by=c("TRD_DD","ISU_CD","T_min")) %>%
mutate(AvgRV_10s=AvgRV_10s+RV_sub/10) %>% # 10-times subsampling
select(-RV_sub)
rm(ttmp_subsample)
}
tmp_min <- tmp_min %>%
mutate(TSRV_10s=(AvgRV_10s-(5/60)*RV)/(1-5/60)) # remove noise & scaling to original
tmp_daily <- tmp_second %>%
filter(T_sec>=152930) %>%
group_by(TRD_DD, ISU_CD) %>%
summarise(P_close=weighted.mean(VWAP,TRDVOL),
.groups = "drop")
data_min <- data_min %>% bind_rows(tmp_min)
data_close <- data_close %>% bind_rows(tmp_daily)
rm(tmp_second)
rm(tmp_min)
rm(tmp_daily)
rm(tmp_min_auto)
print(paste0("Complete : ",target_isu_wide$TRD_DD[i]))
}
fwrite(data_min %>% data.table(),"data/data_min_sample.csv.gz", compress = "gzip")
fwrite(data_close %>% data.table(),"data/data_close_sample.csv.gz", compress = "gzip")
data_min_sample <- fread("data_min_sample.csv.gz")
data_min_sample <- fread(gzfile("data_min_sample.csv.gz"))
data_min_sample <- read_csv(gzfile("data_min_sample.csv.gz"))
getwd()
data_min_sample <- fread(gzfile("data/data_min_sample.csv.gz"))
data_min_sample <- read_csv(gzfile("data/data_min_sample.csv.gz"))
data_close_sample <- read_csv(gzfile("data/data_close_sample.csv.gz"))
# running Global setting
source("1.setting.R")
data_min_sample <- read_csv(gzfile("data/data_min_sample.csv.gz"))
data_close_sample <- read_csv(gzfile("data/data_close_sample.csv.gz"))
data_close_sample
data_min_sample
View(data_min_sample)
View(data_min_sample)
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew, -VWAP_min) %>%
mutate(RV = sqrt(390) * RV,
TSRV_5s = sqrt(390) * TSRV_5s,
TSRV_10s = sqrt(390) * TSRV_10s,
Ret_min = sqrt(390) * Ret_min)
View(data_min)
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew, -VWAP_min) %>%
mutate(RV = sqrt(390) * RV,
TSRV_5s = sqrt(390) * TSRV_5s,
TSRV_10s = sqrt(390) * TSRV_10s,
Ret_min = 390 * Ret_min)
data_min
data_close
data_close_sample
data_close <- data_close_sample %>%
group_by(TRD_DD, ISU_CD) %>%
arrange(TRD_DD, ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
data_close <- data_close_sample %>%
group_by(TRD_DD, ISU_CD) %>%
arrange(ISU_CD, TRD_DD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
View(data_close_sample)
data_close <- data_close_sample %>%
group_by(TRD_DD, ISU_CD) %>%
arrange(ISU_CD, TRD_DD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
data_close_sample %>% distinct(TRD_DD)
data_close <- data_close_sample %>%
ungroup() %>%
group_by(TRD_DD, ISU_CD) %>%
arrange(ISU_CD, TRD_DD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
data_close <- data_close_sample %>%
ungroup() %>%
group_by(TRD_DD, ISU_CD) %>%
arrange(TRD_DD, ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
data_close <- data_close_sample %>%
arrange(TRD_DD, ISU_CD) %>%
group_by(TRD_DD, ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
data_close <- data_close_sample %>%
arrange(TRD_DD, ISU_CD) %>%
group_by(ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
data_close <- data_close_sample %>%
arrange(ISU_CD, TRD_DD) %>%
group_by(ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close))
View(data_close)
data_close <- data_close_sample %>%
arrange(ISU_CD, TRD_DD) %>%
group_by(ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close)) %>%
drop_na(P_close_lag)
data_close <- data_close_sample %>%
arrange(ISU_CD, TRD_DD) %>%
group_by(ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close)) %>%
drop_na(P_close_lag) %>%
ungroup()
View(data_close)
View(data_min)
data_min <- data_min %>%
left_join(., data_close, by=c("TRD_DD", "ISU_CD"))
View(data_min_sample)
View(data_min)
data_min <- data_min %>%
left_join(., data_close, by=c("TRD_DD", "ISU_CD")) %>%
drop_na(data_close)
data_min <- data_min %>%
left_join(., data_close, by=c("TRD_DD", "ISU_CD")) %>%
drop_na(P_close_lag)
data_close <- data_close_sample %>%
arrange(ISU_CD, TRD_DD) %>%
group_by(ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close)) %>%
drop_na(P_close_lag) %>%
ungroup() %>%
select(TRD_DD, ISU_CD, P_close_lag)
data_min <- data_min %>%
left_join(., data_close, by=c("TRD_DD", "ISU_CD")) %>%
drop_na(P_close_lag)
data_min <- data_min %>%
left_join(., data_close, by=c("TRD_DD", "ISU_CD"))
View(data_min)
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew, -VWAP_min) %>%
mutate(RV = sqrt(390) * RV,
TSRV_5s = sqrt(390) * TSRV_5s,
TSRV_10s = sqrt(390) * TSRV_10s,
Ret_min = 390 * Ret_min)
data_close <- data_close_sample %>%
arrange(ISU_CD, TRD_DD) %>%
group_by(ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close)) %>%
drop_na(P_close_lag) %>%
ungroup() %>%
select(TRD_DD, ISU_CD, P_close_lag)
data_min <- data_min %>%
left_join(., data_close, by=c("TRD_DD", "ISU_CD")) %>%
drop_na(P_close_lag)
View(data_close)
View(data_min)
# running Global setting
source("1.setting.R")
data_min_sample <- read_csv(gzfile("data/data_min_sample.csv.gz"))
data_close_sample <- read_csv(gzfile("data/data_close_sample.csv.gz"))
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew, -VWAP_min) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min)
View(data_min)
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min)
View(data_min)
# Roll-sum
data_daily <- data_min %>%
group_by(TRD_DD, ISU_CD) %>%
summarise(VWAP_day=weighted.mean(VWAP_min, Volume),
Volume=sum(Volume))
View(data_daily)
# running Global setting
source("1.setting.R")
# set parameter
master_strt <- 2014
master_end <- 2023
target_strt <- 20140101
target_end <- 20231231
# daily data
master <- tibble()
for(i in master_strt:master_end){
tmp <- read_csv(gzfile(paste0("data/DRV_Master/",i,"_Futures_Master.csv.gz"))) %>%
tibble() %>%
filter(PROD_ID %in% c("KRDRVFUK2I","KRDRVFUKQI"),
EXPMM_NO<=2, substr(ISU_CD,4,4)==1)
master <- master %>% bind_rows(tmp)
}
rm(tmp)
# expiry day & (T-1) day
lsttrd_dd <- master %>%
mutate(TRD_MM=TRD_DD %/% 100) %>%
filter(PROD_ID=="KRDRVFUK2I", EXPMM_NO==1, as.integer(substr(TRD_MM,5,6)) %% 3==0) %>%
select(TRD_MM, TRD_DD,remain_dys) %>%
arrange(TRD_MM, remain_dys) %>%
group_by(TRD_MM) %>%
slice(1:2) %>%
ungroup() %>%
select(TRD_DD)
master_lead <- master %>% filter(EXPMM_NO==1)
master_second <- master %>% filter(EXPMM_NO==2)
lsttrd_second <- lsttrd_dd %>% left_join(master_second)
# target is lead month + second month(ONLY expiry day)
target_isu <- master_lead %>%
union_all(lsttrd_second) %>%
filter(TRD_DD>=target_strt,
TRD_DD<=target_end) %>%
select(TRD_DD,PROD_ID,ISU_CD,TDD_CLSPRC,ACC_TRDVOL,ACC_TRDVAL,EXPMM_NO,EXPMM,remain_dys) %>%
arrange(TRD_DD,PROD_ID,EXPMM_NO)
target_isu_wide <- target_isu %>%
select(TRD_DD,PROD_ID,EXPMM_NO,ISU_CD) %>%
pivot_wider(names_from = c("PROD_ID","EXPMM_NO"), values_from = "ISU_CD")
year_first_day <- target_isu_wide %>%
mutate(TRD_YY=substr(TRD_DD,1,4)) %>%
group_by(TRD_YY) %>%
slice(1) %>%
ungroup() %>%
select(TRD_DD)
View(target_isu_wide)
colnames(target_isu_wide)
colnames(target_isu_wide$KRDRVFUKQI_1[1])
colnames(target_isu_wide$KRDRVFUKQI_1[])
target_isu_wide$KRDRVFUKQI_1
View(target_isu)
fwrite(target_isu %>% data.table(), "data/target_isu.csv.gz", compress = "gzip")
# running Global setting
source("1.setting.R")
target_isu <- read_csv(gzfile("data/target_isu.csv.gz"))
target_isu
data_min_sample <- read_csv(gzfile("data/data_min_sample.csv.gz"))
data_close_sample <- read_csv(gzfile("data/data_close_sample.csv.gz"))
target_isu <- read_csv(gzfile("data/target_isu.csv.gz"))
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min) %>%
left_join(., target_isu %>% select(TRD_DD,ISU_CD, PROD_ID, EXPMM_NO))
View(data_min)
# Roll-sum
data_daily <- data_min %>%
group_by(TRD_DD, PROD_ID, EXPMM_NO, ISU_CD) %>%
summarise(VWAP_day=weighted.mean(VWAP_min, Volume),
Volume=sum(Volume))
# Roll-sum
data_daily <- data_min %>%
group_by(TRD_DD, PROD_ID, EXPMM_NO, ISU_CD) %>%
summarise(VWAP_day=weighted.mean(VWAP_min, Volume),
Volume=sum(Volume),
.groups = "drop")
data_daily
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min) %>%
left_join(., target_isu %>% select(TRD_DD,ISU_CD, PROD_ID, EXPMM_NO, TRDVOL))
data_min_sample <- read_csv(gzfile("data/data_min_sample.csv.gz"))
data_close_sample <- read_csv(gzfile("data/data_close_sample.csv.gz"))
target_isu <- read_csv(gzfile("data/target_isu.csv.gz"))
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min) %>%
left_join(., target_isu %>% select(TRD_DD,ISU_CD, PROD_ID, EXPMM_NO, TRDVOL))
target_isu
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min) %>%
left_join(., target_isu %>% select(TRD_DD,ISU_CD, PROD_ID, EXPMM_NO, ACC_TRDVOL))
# Roll-sum
data_daily <- data_min %>%
group_by(TRD_DD, PROD_ID, EXPMM_NO, ISU_CD) %>%
summarise(VWAP_day=weighted.mean(VWAP_min, Volume),
Volume=sum(Volume),
.groups = "drop")
data_daily
View(data_min)
# Convert to daily-scale
data_min <- data_min_sample %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min) %>%
left_join(., target_isu %>% select(TRD_DD,ISU_CD, PROD_ID, EXPMM_NO))
# Roll-sum
data_daily <- data_min %>%
group_by(TRD_DD, PROD_ID, EXPMM_NO, ISU_CD) %>%
summarise(VWAP_day=weighted.mean(VWAP_min, Volume),
Volume=sum(Volume),
.groups = "drop")
mutate(VWAP_day_lag=dplyr::lag(VWAP_day),
Volume_lag=dplyr::lag(Volume))
# Roll-sum
data_daily <- data_min %>%
group_by(TRD_DD, PROD_ID, EXPMM_NO, ISU_CD) %>%
summarise(VWAP_day=weighted.mean(VWAP_min, Volume),
Volume=sum(Volume),
.groups = "drop") %>%
group_by(TRD_DD,ISU_CD) %>%
mutate(VWAP_day_lag=dplyr::lag(VWAP_day),
Volume_lag=dplyr::lag(Volume))
# running Global setting
source("1.setting.R")
# set parameter
master_strt <- 2014
master_end <- 2023
target_strt <- 20140101
target_end <- 20231231
# daily data
master <- tibble()
for(i in master_strt:master_end){
tmp <- read_csv(gzfile(paste0("data/DRV_Master/",i,"_Futures_Master.csv.gz"))) %>%
tibble() %>%
filter(PROD_ID %in% c("KRDRVFUK2I","KRDRVFUKQI"),
EXPMM_NO<=2, substr(ISU_CD,4,4)==1)
master <- master %>% bind_rows(tmp)
}
rm(tmp)
# expiry day & (T-1) day
lsttrd_dd <- master %>%
mutate(TRD_MM=TRD_DD %/% 100) %>%
filter(PROD_ID=="KRDRVFUK2I", EXPMM_NO==1, as.integer(substr(TRD_MM,5,6)) %% 3==0) %>%
select(TRD_MM, TRD_DD,remain_dys) %>%
arrange(TRD_MM, remain_dys) %>%
group_by(TRD_MM) %>%
slice(1:2) %>%
ungroup() %>%
select(TRD_DD)
master_lead <- master %>% filter(EXPMM_NO==1)
master_second <- master %>% filter(EXPMM_NO==2)
lsttrd_second <- lsttrd_dd %>% left_join(master_second)
# target is lead month + second month(ONLY expiry day)
target_isu <- master_lead %>%
union_all(lsttrd_second) %>%
filter(TRD_DD>=target_strt,
TRD_DD<=target_end) %>%
select(TRD_DD,PROD_ID,ISU_CD,TDD_CLSPRC,ACC_TRDVOL,ACC_TRDVAL,EXPMM_NO,EXPMM,remain_dys) %>%
arrange(TRD_DD,PROD_ID,EXPMM_NO)
target_isu_wide <- target_isu %>%
select(TRD_DD,PROD_ID,EXPMM_NO,ISU_CD) %>%
pivot_wider(names_from = c("PROD_ID","EXPMM_NO"), values_from = "ISU_CD")
year_first_day <- target_isu_wide %>%
mutate(TRD_YY=substr(TRD_DD,1,4)) %>%
group_by(TRD_YY) %>%
slice(1) %>%
ungroup() %>%
select(TRD_DD)
data_min <- tibble()
data_close <- tibble()
# running Global setting
setwd("/Users/hwan/KAIST/25fall/thesis")
source("1.setting.R")
data_min <- read_csv(gzfile("data/data_min2.csv.gz"))
data_close <- read_csv(gzfile("data/data_close2.csv.gz"))
# Thresholds base price
data_close <- data_close %>%
arrange(ISU_CD, TRD_DD) %>%
group_by(ISU_CD) %>%
mutate(P_close_lag = dplyr::lag(P_close)) %>%
drop_na(P_close_lag) %>%
ungroup() %>%
select(TRD_DD, ISU_CD, P_close_lag) %>%
filter()
# Convert to daily-scale & make thresholds
data_min <- data_min %>%
left_join(., data_close, by=c("TRD_DD", "ISU_CD")) %>%
drop_na(P_close_lag) %>%
select(-AvgRV_5s, -AvgRV_10s, -Skew) %>%
mutate(RV = 390 * RV,
TSRV_5s = 390 * TSRV_5s,
TSRV_10s = 390 * TSRV_10s,
Ret_min = 390 * Ret_min) %>%
mutate(DTCB=if_else(T_min>=1450,
(P_low-0.8*P_close_lag)/P_close_lag,
if_else(CB_grp==0,
(P_low-0.92*P_close_lag)/P_close_lag,
(P_low-0.15*P_close_lag)/P_close_lag)))
# Test
error_test <- data_min %>% group_by(TRD_DD,PROD_ID, ISU_CD) %>% summarise(cnt=1) %>% group_by(TRD_DD, PROD_ID) %>% summarise(cnt=sum(cnt))
sum(error_test$cnt>1) # zero!
# for 1day, 1 isu -> lead month base & second month ONLY expiry day
data_min %>% filter((P_low-P_close_lag)/P_close_lag>0.15) # NO thresholds level 2 (15%)
year_first_day <- data_close %>%
mutate(TRD_YY=substr(TRD_DD,1,4)) %>%
group_by(TRD_YY, TRD_DD) %>%
summarise() %>%
slice(1) %>%
filter(substr(TRD_DD,5,6)=='01')
data_min %>% mutate(T_hour=T_min %/% 100) %>% select(T_hour)
data_min %>% mutate(T_hour=T_min %/% 100) %>% group_by(TRD_DD, PROD_ID, T_hour) %>%
summarise(cnt=n())
data_min %>% mutate(T_hour=T_min %/% 100) %>% group_by(TRD_DD, PROD_ID, T_hour) %>%
summarise(cnt=n()) %>% filter(cnt>31, cnt<60)
data_min %>% mutate(T_hour=T_min %/% 100) %>% group_by(TRD_DD, PROD_ID, T_hour) %>%
summarise(cnt=n()) %>% filter(cnt>31, cnt<60) %>% view()
